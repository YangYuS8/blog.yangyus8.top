services:
  blog:
    image: ${BLOG_IMAGE:-ghcr.io/OWNER/yangyus8-blog:latest}  # CI 构建推送后的镜像（建议在 .env 中配置 BLOG_IMAGE）
    container_name: yangyus8-blog
    restart: unless-stopped
    ports:
      - "80:80"   # 若由上层反向代理再做 80/443，可改成 "127.0.0.1:8080:80"
    depends_on:
      - twikoo
    environment:
      # 自托管 Twikoo API 地址（供前端主题配置/回显用，可选，主题直接使用 _config.fluid.yml 中的 envId）
      TWIKOO_API_URL: ${TWIKOO_PUBLIC_URL:-https://blog.yangyus8.top/twikoo/}
    labels:
      # 仅为 blog 服务开启 watchtower 自动更新，其它服务保持不自动更新
      - "com.centurylinklabs.watchtower.enable=true"

  # --- Waline 评论系统（已切换到 Twikoo，自托管保留回退，需恢复请取消注释） ---
  # waline-db:
  #   image: mariadb:11.4
  #   container_name: waline-db
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   environment:
  #     TZ: Asia/Shanghai
  #   command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #   volumes:
  #     - ${WALINE_DB_DIR:-./data/waline-db}:/var/lib/mysql
  # waline:
  #   image: lizheming/waline:latest
  #   container_name: waline
  #   restart: unless-stopped
  #   depends_on:
  #     - waline-db
  #   env_file:
  #     - .env
  #   environment:
  #     TZ: Asia/Shanghai
  #     DISABLE_EMAIL: 'true'
  #     MYSQL_HOST: waline-db
  #     MYSQL_PORT: 3306
  #     MYSQL_DB: ${MYSQL_DATABASE}
  #   volumes:
  #     - ${WALINE_DATA_DIR:-./data/waline}:/data
  #   expose:
  #     - "8360"

  # --- Twikoo 评论系统（自托管模式） ---
  # 数据库：MongoDB（Twikoo 原生使用 Mongo）
  twikoo-db:
    image: mongo:7.0
    container_name: twikoo-db
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    command: >-
      mongod --bind_ip 0.0.0.0 --replSet rs0 --oplogSize 128
    volumes:
      - ${TWIKOO_DB_DIR:-./data/twikoo-db}:/data/db
    # 初始化副本集（只需一次）可在容器启动后执行：docker exec -it twikoo-db mongosh --eval 'rs.initiate()'

  twikoo:
    image: twikoojs/twikoo:latest
    container_name: twikoo
    restart: unless-stopped
    depends_on:
      - twikoo-db
    environment:
      TZ: Asia/Shanghai
      # 如果副本集已初始化，使用 mongodb://twikoo-db:27017/twikoo?replicaSet=rs0
      MONGO_URL: ${TWIKOO_MONGO_URL:-mongodb://twikoo-db:27017/twikoo}
      # 允许的 CORS 来源（逗号分隔多个域名），可在 .env 中覆盖
      TWIKOO_CORS_ALLOW_ORIGIN: ${TWIKOO_CORS_ALLOW_ORIGIN:-https://blog.yangyus8.top}
      # 节流 & 其他可选：TWIKOO_THROTTLE, TWIKOO_MAX_COMMENT_NEST, etc.
    expose:
      - "8080"
    # 若需要持久化上传文件（Twikoo 支持对象存储适配，可后续拓展）
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 1800   # 每 30 分钟轮询一次
      WATCHTOWER_LABEL_ENABLE: "true"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    restart: unless-stopped
    env_file:
      - .env
    environment:
      TZ: Asia/Shanghai
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001" # 控制台 (可由上层反代保护)
    volumes:
      - ${MINIO_DATA_DIR:-./data/minio}:/data

# 生产环境建议用 Caddy / Nginx 在宿主机做 80/443 入口 + 证书管理
